######################################################################
# START OF PLUGINS
######################################################################

# Plugin manager for tmux 
set -g @plugin 'tmux-plugins/tpm'

# Simple tmux options for anyone
set -g @plugin 'tmux-plugins/tmux-sensible'

# Gruvbox theme for tmux - powerline support!
# set -g @plugin 'egel/tmux-gruvbox'

# Persistent tmux envs across system restarts
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Continuous saving of tmux environment
set -g @plugin 'tmux-plugins/tmux-continuum'

# Battery plugin
set -g @plugin 'tmux-plugins/tmux-battery'

# Vim <-> tmux navigation
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @plugin 'tmux-plugins/tmux-yank'

#######################################################
# TMUX-CONTINUUM 
#######################################################

# Enables restoral of saved tmux config
set -g @continuum-restore 'on'

# How often to save a tmux layout
set -g @continuum-save-interval '10'

#######################################################
# TMUX-RESURRECT
#######################################################

# Capture contents of each pane 
set -g @resurrect-capture-pane-contents 'on'

# Set to resurrect neovim sessions 
set -g @resurrect-strategy-nvim 'session'

# Processes to resurrect 
set -g @resurrect-processes '~julia'

#######################################################
# TMUX-SENSIBLE
#######################################################

# Increase scrollback buffer size
set -g history-limit 5000

######################################################################
# END OF PLUGINS
######################################################################




######################################################################
# START OF GENERAL CONFIGURATIONS
######################################################################

# Turn on interactivity with mouse 
set -g mouse on

# Change the position of the status bar
set-option -g status-position bottom

# Start window numbering at specific num
set -g base-index 1          

# Renumber windows on window close
set -g renumber-windows on    

# status bar
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[bg=colour241,fg=colour248] #S #[bg=colour237,fg=colour241,nobold,noitalics,nounderscore]"
set-option -g status-right "#[bg=colour237,fg=colour239 nobold, nounderscore, noitalics]#[bg=colour239,fg=colour246] %Y-%m-%d  %H:%M #{battery_color_fg}#[bg=colour239,nobold,noitalics,nounderscore]#{battery_color_bg}#[fg=colour237] #{battery_percentage} "

set-window-option -g window-status-current-format "#[bg=colour214,fg=colour237,nobold,noitalics,nounderscore]#[bg=colour214,fg=colour239] #I #[bg=colour214,fg=colour239,bold] #W#{?window_zoomed_flag,*Z,} #[bg=colour237,fg=colour214,nobold,noitalics,nounderscore]"
set-window-option -g window-status-format "#[bg=colour239,fg=colour237,noitalics]#[bg=colour239,fg=colour223] #I #[bg=colour239,fg=colour223] #W #[bg=colour237,fg=colour239,noitalics]"


#######################################################
# KEY BINDING
#######################################################

# Bind prefix to Ctrl-a
unbind C-b
set -g prefix C-a

# We have this in case we need to send control A to a progrom under tmux
bind C-a send-prefix

# Splitting the window vertically and horizontally
bind -n C-b split-window -h -c "#{pane_current_path}"
bind -n C-n split-window -v -c "#{pane_current_path}"
bind c new-window -c "$PWD"
bind-key v splitw -h -p 40
bind-key h splitw -v -p 40

# Tmux-Navigator Configs:
# Smart pane switching with awareness of vim splits
is_vim_emacs='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
is_vim_emacs='echo "#{pane_current_command}" | grep -iqE "((^|\/)g?(view|n?vim?x?)(diff)?$)|emacs.*$"'
bind -n C-h if-shell "$is_vim_emacs" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim_emacs" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim_emacs" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim_emacs" "send-keys C-l" "select-pane -R"
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l
# bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# No weird characters in tmux
set -s escape-time 0

# No gibberish when copying
set-option -s set-clipboard off

bind C-[ previous-window
bind C-] next-window

run '~/.tmux/plugins/tpm/tpm'

